<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java Cms on MyThinkPond</title>
    <link>/tags/java-cms/</link>
    <description>Recent content in Java Cms on MyThinkPond</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Mar 2010 04:37:11 +0000</lastBuildDate>
    
	<atom:link href="/tags/java-cms/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to setup Brix-cms (with Apache Jackrabbit as a cluster) - Part 1 of 3</title>
      <link>/2010/03/09/how-to-setup-brix-cms-with-apache-jackrabbit-as-a-cluster-part-1-of-3/</link>
      <pubDate>Tue, 09 Mar 2010 04:37:11 +0000</pubDate>
      
      <guid>/2010/03/09/how-to-setup-brix-cms-with-apache-jackrabbit-as-a-cluster-part-1-of-3/</guid>
      <description>PS: This tutorial assumes that you are familiar with deploying applications (war files) in Tomcat, setting up datasource\connection pooling using Apache DBCP and in using H2 Database.
Objective: Setup two instances of Brix-cms backed by a clustered Jackrabbit JCR on the back-end persisted onto a H2 database.
Because there is so much to cover, I will cover the pieces in three installments.
Installment #1:
 What and why of Brix-cms.</description>
    </item>
    
  </channel>
</rss>